#version 430
layout(local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 1) uniform image2D img_output;
layout(rgba32f, binding = 2) uniform image2D input_image;



void main() {
  // base pixel colour for image
  vec4 pixel = vec4(1.0, 1.0, 1.0, 0.0);
  // get index in global work group i.e x,y position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

  vec4 img_pixel = imageLoad(input_image, pixel_coords);
  vec4 invert_pixel = pixel - img_pixel;
  //
  // interesting stuff happens here later
  //
  
  // output to a specific pixel in the image
  imageStore(img_output, pixel_coords, invert_pixel);
}